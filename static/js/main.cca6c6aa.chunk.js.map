{"version":3,"sources":["components/Navbar.js","components/CurrentWeather.js","components/HistoricalWeather.js","App.js","index.js"],"names":["Navbar","handleSubmit","handleChange","className","onSubmit","type","onChange","name","placeholder","aria-label","required","CurrentWeather","data","location","region","country","src","current","weather_icons","alt","temperature","weather_descriptions","feelslike","humidity","HistoricalWeather","dayNames","Object","keys","historical","map","item","i","Date","date","getDay","avgtemp","astro","sunrise","sunset","App","useState","zipCode","setZipCode","setData","err","setErr","today","toISOString","slice","e","preventDefault","fetch","process","method","headers","then","res","lengthOfZipCode","String","split","length","Error","json","catch","message","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA0BeA,EAxBA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,aAG3B,OACI,sBAAKC,UAAU,kBAAf,UACI,sBAAMA,UAAU,OAAhB,8BACA,qBAAKA,UAAU,aAAf,SACI,uBAAMC,SAAUH,EAAcE,UAAU,OAAxC,UACI,uBAAOE,KAAK,OACRC,SAAUJ,EACVK,KAAK,aACLC,YAAY,6BACZC,aAAW,4BACXN,UAAU,eACVO,UAAU,IAEd,wBAAQL,KAAK,SAASF,UAAU,MAAhC,SAAsC,mBAAGA,UAAU,6BCExDQ,EAlBQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGtB,OACI,0BAAST,UAAU,mBAAnB,UAEG,qBAAIA,UAAU,YAAd,UAA2BS,EAAKC,SAASN,KAAzC,KAAiDK,EAAKC,SAASC,OAA/D,KAAyEF,EAAKC,SAASE,WACvF,qBAAKZ,UAAU,eAAea,IAAKJ,EAAKK,QAAQC,cAAeC,IAAI,iBACnE,oBAAIhB,UAAU,SAAd,SAAuB,iCAAOS,EAAKK,QAAQG,YAAY,oCAAhC,SACvB,oBAAIjB,UAAU,cAAd,SAA6BS,EAAKK,QAAQI,uBAC1C,8CAAiBT,EAAKK,QAAQK,UAAU,iCAAM,oCAAN,UACxC,4CAAeV,EAAKK,QAAQM,SAAS,iCAAM,oCAAN,cCuBjCC,EAlCW,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KAEpBa,EAAW,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAKJ,OACI,yBAAStB,UAAU,qCAAnB,SACI,qBAAKA,UAAU,qBAAf,SAEQuB,OAAOC,KAAKf,EAAKgB,YAAYC,KAAI,SAACC,EAAMC,GAAP,OAEjC,sBAAK5B,UAAU,iBAAf,UACI,oBAAIA,UAAU,YAAd,SAA4BsB,EAAS,IAAIO,KAAKpB,EAAKgB,WAAWE,GAAMG,MAAMC,YAC1E,qBAAI/B,UAAU,aAAd,UAA6BS,EAAKgB,WAAWE,GAAMK,QAAS,iCAAM,oCAAN,UAC5D,qBAAIhC,UAAU,UAAd,sBAAmCS,EAAKgB,WAAWE,GAAMM,MAAMC,WAC/D,qBAAIlC,UAAU,SAAd,qBAAiCS,EAAKgB,WAAWE,GAAMM,MAAME,YAJ5BP,WCqC1CQ,MApDf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENC,EAFM,KAEGC,EAFH,OAGWF,mBAAS,MAHpB,mBAGN5B,EAHM,KAGA+B,EAHA,OAISH,mBAAS,MAJlB,mBAINI,EAJM,KAIDC,EAJC,KAKTC,GAAQ,IAAId,MAAOe,cAAcC,MAAM,EAAG,IAgC9C,OACE,sBAAK7C,UAAU,MAAf,UACC,cAAC,EAAD,CACGF,aAhCe,SAACgD,GACpBA,EAAEC,iBAEFC,MAAM,sDAAD,OAAuDC,mCAAvD,kBAAsGX,EAAtG,yEAA8KK,EAA9K,aAAgM,CACnMO,OAAQ,MACRC,QAAS,CACP,OAAU,sBAGbC,MAAK,SAAAC,GACJ,IAAMC,EAAkBC,OAAOjB,GAASkB,MAAM,IAAIC,OAClD,GAAGH,EAAkB,GAAKA,EAAkB,EAC1C,MAAMI,MAAM,kDACP,OAAOL,EAAIM,UACjBP,MAAK,SAAAC,GACNb,EAAQa,GACRX,EAAO,SACNkB,OAAM,SAAAnB,GACPC,EAAOD,EAAIoB,aAeT9D,aAVe,SAAC+C,GACpBP,GAAYO,EAAEgB,OAAOC,UAWlBtB,GAAO,oBAAIzC,UAAU,cAAd,SAA6ByC,IACpChC,GAAQ,cAAC,EAAD,CAAgBA,KAAMA,IAC9BA,GAAQ,cAAC,EAAD,CAAmBA,KAAMA,QC9CxCuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cca6c6aa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = ({handleSubmit, handleChange}) =>{\r\n    \r\n    \r\n    return (\r\n        <nav className=\"navbar bg-sized\">\r\n            <span className=\"logo\">Weather By Elroi</span>\r\n            <div className=\"nav-search\">\r\n                <form onSubmit={handleSubmit} className=\"form\">\r\n                    <input type=\"text\" \r\n                        onChange={handleChange} \r\n                        name=\"zip-search\" \r\n                        placeholder=\"Search Weather By Zip Code\" \r\n                        aria-label=\"Seach Weather By Zip Code\"\r\n                        className=\"search-input\"\r\n                        required={true}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn\"><i className=\"fas fa-search\"></i></button>\r\n                </form>\r\n            </div>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst CurrentWeather = ({ data }) => {\r\n   \r\n    \r\n    return (\r\n        <section className=\"weather bg-sized\">\r\n            \r\n           <h1 className=\"city-name\">{data.location.name}, {data.location.region}, {data.location.country}</h1>\r\n           <img className=\"weather-icon\" src={data.current.weather_icons} alt=\"Weather Icon\"/>\r\n           <h2 className=\"temp-f\"><span>{data.current.temperature}<sup>o</sup>F</span></h2>\r\n           <h3 className=\"description\">{data.current.weather_descriptions}</h3>\r\n           <h4>Feels Like: {data.current.feelslike}<span><sup>o</sup>F</span></h4>\r\n           <h4>Humidity: {data.current.humidity}<span><sup>o</sup>F</span></h4>\r\n         \r\n        \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CurrentWeather\r\n","import React from 'react'\r\n\r\nconst HistoricalWeather = ({data}) => {\r\n    \r\n    let dayNames = [\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday'\r\n      ];\r\n      \r\n    \r\n    \r\n    return (\r\n        <section className=\"historical-weather-container sized\">\r\n            <div className=\"historical-weather\">\r\n                { \r\n                    Object.keys(data.historical).map((item, i) => (\r\n                        \r\n                    <div className=\"temp-container\" key={i}>\r\n                        <h2 className=\"temp-date\">{ dayNames[new Date(data.historical[item].date).getDay()] }</h2>\r\n                        <h3 className=\"temp-label\">{ data.historical[item].avgtemp }<span><sup>o</sup>F</span></h3>\r\n                        <h4 className=\"sunrise\">Sunrise: { data.historical[item].astro.sunrise }</h4>\r\n                        <h4 className=\"sunset\">Sunset: { data.historical[item].astro.sunset }</h4>\r\n                    </div>\r\n                    \r\n                    ))\r\n                }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HistoricalWeather\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport {useState} from 'react';\nimport CurrentWeather from './components/CurrentWeather';\nimport HistoricalWeather from './components/HistoricalWeather'\n\n\nfunction App() {\n\n  const [zipCode, setZipCode] = useState('');\n  const [data, setData] = useState(null);\n  const [err, setErr] = useState(null)\n  let today = new Date().toISOString().slice(0, 10);\n  \n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(`https://api.weatherstack.com/historical?access_key=${process.env.REACT_APP_WEATHER_API_KEY}&query=${zipCode}&units=f&historical_date_start=2021-04-18&historical_date_end=${today}&hourly=1`, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json'\n    }\n    })\n    .then(res => {\n      const lengthOfZipCode = String(zipCode).split('').length;\n      if(lengthOfZipCode > 5 || lengthOfZipCode < 5) {\n        throw Error('That is not a valid Zip Code, please try again');\n      } else return res.json();\n    }).then(res => {\n      setData(res);\n      setErr(null);\n    }).catch(err => {\n      setErr(err.message);\n    });\n    \n  }\n\n  const handleChange = (e) => {\n    setZipCode(+e.target.value);\n  }\n  \n  \n  \n  return (\n    <div className=\"App\">\n     <Navbar \n        handleSubmit={handleSubmit} \n        handleChange={handleChange} \n      />\n      {err && <h2 className=\"err-message\">{err}</h2>}\n      {data && <CurrentWeather data={data}/>}\n      {data && <HistoricalWeather data={data}/>}\n    \n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}